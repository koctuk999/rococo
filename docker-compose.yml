version: '3.9'

services:
  rococo-db:
    container_name: rococo-db
    image: postgres:15.1
    environment:
      - POSTGRES_MULTIPLE_DATABASES="rococo-auth","rococo-userdata","rococo-artist","rococo-painting","rococo-museum","rococo-country"
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - rococo-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 3s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - rococo-network
    dns_search: .

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - rococo-network

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    networks:
      - rococo-network

  auth.rococo.dc:
    container_name: auth.rococo.dc
    image: koctuk999/rococo-auth:latest
    ports:
      - "9000:9000"
    healthcheck:
      test: "wget --spider http://localhost:9000/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - rococo-network
    dns_search: .

  userdata.rococo.dc:
    container_name: userdata.rococo.dc
    image: koctuk999/rococo-userdata:latest
    ports:
      - "8081:8081"
      - "9091:9091"
    healthcheck:
      test: "wget --spider http://localhost:8081/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-db:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - rococo-network
    dns_search: .

  gateway.rococo.dc:
    container_name: gateway.rococo.dc
    image: koctuk999/rococo-gateway:latest
    ports:
      - "8080:8080"
    healthcheck:
      test: "wget --spider http://localhost:8080/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    networks:
      - rococo-network
    dns_search: .

  country.rococo.dc:
    container_name: country.rococo.dc
    image: koctuk999/rococo-country:latest
    ports:
      - "8083:8083"
      - "9093:9093"
    healthcheck:
      test: "wget --spider http://localhost:8083/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-db:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

  museum.rococo.dc:
    container_name: museum.rococo.dc
    image: koctuk999/rococo-museum:latest
    ports:
      - "8084:8084"
      - "9094:9094"
    healthcheck:
      test: "wget --spider http://localhost:8084/actuator/health || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    depends_on:
      rococo-db:
        condition: service_healthy
      country.rococo.dc:
        condition: service_healthy
    networks:
      - rococo-network
    dns_search: .

volumes:
  rococo-data:
    external: true

networks:
  rococo-network:
    driver: bridge
