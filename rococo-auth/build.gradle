plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'guru.qa'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.security:spring-security-oauth2-authorization-server:${project.ext.oauth2AuthorizationServerVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.flywaydb:flyway-core:${project.ext.flywayVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    compileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    runtimeOnly "org.postgresql:postgresql:${project.ext.postgresDriverVersion}"
}

jib {
    container {
        ports = ['9000']
        jvmFlags = ["-Dspring.profiles.active=docker"]
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    from {
        image = "${project.ext.dockerImage}"
        platforms {
            platform {
                architecture = "${project.ext.dockerArch}"
                os = 'linux'
            }
        }
    }
    to {
        image = "${project.ext.dockerHubName}/${project.name}"
        tags = ['latest', "${project.version}"]
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
