buildscript {
    ext {
        protobufVersion = '3.24.3'
        grpcVersion = '1.58.0'
        junitVersion = '5.10.0'
        allureVersion = '2.24.0'
        selenideVersion = '6.18.0'
        retrofitVersion = '2.9.0'
        okhttp3Version = '3.14.9'
        logbackVersion = '1.4.11'
        slf4jVersion = '2.0.9'
        hibernateVersion = '6.3.0.Final'
        springCryptoVersion = '6.1.0'
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
    id 'io.qameta.allure-adapter' version '2.11.2'
}

group = 'guru.qa'
version = '0.0.1-SNAPSHOT'

allure {
    version.set("${allureVersion}")
    adapter {
        aspectjVersion.set("1.9.21")
        autoconfigure.set(true)
        aspectjWeaver.set(true)
    }
}

dependencies {
    testImplementation "ch.qos.logback:logback-classic:${logbackVersion}"
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    testImplementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    testImplementation "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    testImplementation "com.squareup.okhttp3:logging-interceptor:${okhttp3Version}"
    testImplementation "com.squareup.okhttp3:okhttp-urlconnection:${okhttp3Version}"
    testImplementation "org.postgresql:postgresql:${project.ext.postgresDriverVersion}"
    testImplementation "org.hibernate:hibernate-core:${hibernateVersion}"
    testImplementation "org.springframework.security:spring-security-crypto:${springCryptoVersion}"
    testImplementation "io.qameta.allure:allure-attachments:${allureVersion}"
    testImplementation("io.qameta.allure:allure-junit5:${allureVersion}") {
        exclude group: "org.junit.jupiter"
    }
    testImplementation("io.qameta.allure:allure-selenide:${allureVersion}") {
        exclude group: 'com.codeborne'
    }
    testImplementation "io.qameta.allure:allure-okhttp3:${allureVersion}"
    testImplementation "io.qameta.allure:allure-grpc:${allureVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${project.ext.lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${project.ext.lombokVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform()
}
